name: CI
on:
  pull_request:
jobs:
    install:
        name: Install
        runs-on: ubuntu-latest
        continue-on-error: false
        steps:
          - name: ðŸ›‘ Cancel Previous Runs
            uses: styfle/cancel-workflow-action@0.9.1

          - name: Checkout
            uses: actions/checkout@v3
            with:
                token: ${{ secrets.GIT_TOKEN || github.token  }}

          - name: Get yarn cache directory path
            id: yarn-cache-dir-path
            run: echo "::set-output name=dir::$(yarn cache dir)"

          - name: Cache yarn files
            uses: actions/cache@v3
            id: yarn-cache-files
            with:
                path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                key: ${{ runner.os }}-yarn-files-${{ hashFiles('**/yarn.lock') }}
                restore-keys: ${{ runner.os }}-yarn-files-

          - name: Setup yarn access
            run: |
                git config --global url."https://${{ secrets.GIT_TOKEN || github.token  }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
                sed -i "s|Builder/|git+https://github.com/Money-Flow/|" package.json
          - name: Install JS dependencies
            run: yarn install

          - name: Pack artifact
            run: tar czf /tmp/artifact.tar.gz .

          - name: Upload artifact
            uses: actions/upload-artifact@v3
            with:
                name: frontend-artifact
                path: /tmp/artifact.tar.gz
                retention-days: 1

    deploy-preview:
      name: ðŸš€ Deploy Preview ðŸš€
      needs: [install]
      runs-on: ubuntu-latest
      steps:
        - name: ðŸ›‘ Cancel Previous Runs
          uses: styfle/cancel-workflow-action@0.9.1

        - name: Checkout
          uses: actions/checkout@v3
          with:
            token: ${{ secrets.GIT_TOKEN || github.token  }}

        - name: Download artifact
          uses: actions/download-artifact@v3
          with:
              name: frontend-artifact

        - name: Unpack artifact
          run: tar xf artifact.tar.gz

        - name: Build TS application
          run: yarn build

        - name: Deploy to Netlify
          uses: nwtgck/actions-netlify@v1.2
          with:
            publish-dir: './build'
            production-branch: master
            production-deploy: false
            github-token: ${{ secrets.GITHUB_TOKEN }}
            deploy-message: "Deploy to Netlify from GitHub Actions"
            enable-pull-request-comment: false
            enable-commit-comment: false
            overwrites-pull-request-comment: false
            github-deployment-environment: 'deploy-preview'
          env:
            NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
            NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    E2E:
      timeout-minutes: 60
      name: E2E Testing
      needs: [deploy-preview]
      if: github.event.deployment_status.state == 'success'
      runs-on: ubuntu-latest
      steps:
        - name: Install Playwright
          run: npx install playwright --with-deps

        - name: Waiting for 200 from the Netlify Preview
          uses: jakepartusch/wait-for-netlify-action@v1.2
          id: waitFor200
          with:
            site_name: "cash69"
            max_timeout: 360

        - name: Run E2E Tests on Netlify URL
          run: yarn test:e2e
          env:
            PLAYWRIGHT_TEST_BASE_URL: ${{ steps.waitFor200.outputs.url }}
